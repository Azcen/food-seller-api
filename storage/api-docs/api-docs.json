{
    "openapi": "3.0.0",
    "info": {
        "title": "Swagger with Laravel",
        "version": "1.0.0"
    },
    "paths": {
        "/api/v1/auth/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Register a new user",
                "operationId": "49116d1f2695706d53b9e5fbab042010",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RegisterRequestSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User registered successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RegistrationResponseSchema"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error or user registration failed"
                    }
                }
            }
        },
        "/api/v1/auth/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "User login",
                "operationId": "ad6912b6444da4d8eb7f1a2606471360",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LoginRequestSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User logged in successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LoginResponseSchema"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/api/v1/auth/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Logout user",
                "operationId": "e1fac1646c2669c795be627532b4ebb4",
                "responses": {
                    "200": {
                        "description": "Successfully logged out"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/auth/user-profile": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Get user profile",
                "operationId": "11f7f03f48f189cc966701fa5c376dc3",
                "responses": {
                    "200": {
                        "description": "User profile retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserProfileResponseSchema"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/ingredients": {
            "get": {
                "tags": [
                    "Ingredients"
                ],
                "summary": "Get a list of ingredients",
                "operationId": "getIngredients",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/IngredientResponseSchema"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized. Token missing or invalid.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized. Token missing or invalid."
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 401
                                        },
                                        "error_type": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Ingredients"
                ],
                "summary": "Create a new ingredient",
                "operationId": "createIngredient",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/IngredientRequestSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Ingredient created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/IngredientResponseSchema"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Request. Validation errors.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unprocessable Request."
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 422
                                        },
                                        "error_type": {
                                            "type": "string",
                                            "example": "Unprocessable Content"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized. Token missing or invalid.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized. Token missing or invalid."
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 401
                                        },
                                        "error_type": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/ingredients/{id}": {
            "get": {
                "tags": [
                    "Ingredients"
                ],
                "summary": "Get details of a specific ingredient",
                "operationId": "getIngredient",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the ingredient",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/IngredientResponseSchema"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized. Token missing or invalid.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized. Token missing or invalid."
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 401
                                        },
                                        "error_type": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Ingredient not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Ingredient not found."
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "error_type": {
                                            "type": "string",
                                            "example": "Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Ingredients"
                ],
                "summary": "Update details of a specific ingredient",
                "operationId": "updateIngredient",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the ingredient",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/IngredientRequestSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ingredient updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/IngredientResponseSchema"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized. Token missing or invalid.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized. Token missing or invalid."
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 401
                                        },
                                        "error_type": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Ingredient not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Ingredient not found."
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "error_type": {
                                            "type": "string",
                                            "example": "Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Request. Validation errors.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unprocessable Request."
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 422
                                        },
                                        "error_type": {
                                            "type": "string",
                                            "example": "Unprocessable Content"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Ingredients"
                ],
                "summary": "Delete a specific ingredient",
                "operationId": "deleteIngredient",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the ingredient",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ingredient deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Ingredient deleted"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized. Token missing or invalid.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized. Token missing or invalid."
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 401
                                        },
                                        "error_type": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Ingredient not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Ingredient not found."
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "error_type": {
                                            "type": "string",
                                            "example": "Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/recipes": {
            "get": {
                "tags": [
                    "Recipes"
                ],
                "summary": "Get a list of recipes",
                "operationId": "getRecipes",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/RecipeResponseSchema"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Recipes"
                ],
                "summary": "Create a new recipe",
                "operationId": "createRecipe",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RecipeRequestSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Recipe created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RecipeResponseSchema"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized. Token missing or invalid.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized. Token missing or invalid."
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 401
                                        },
                                        "error_type": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Request. Validation errors.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unprocessable Request."
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 422
                                        },
                                        "error_type": {
                                            "type": "string",
                                            "example": "Unprocessable Content"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/recipes/{id}": {
            "get": {
                "tags": [
                    "Recipes"
                ],
                "summary": "Get details of a specific recipe",
                "operationId": "getRecipe",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the recipe",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RecipeResponseSchema"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized. Token missing or invalid.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized. Token missing or invalid."
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 401
                                        },
                                        "error_type": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Recipe not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Recipe not found."
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "error_type": {
                                            "type": "string",
                                            "example": "Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Recipes"
                ],
                "summary": "Update details of a specific recipe",
                "operationId": "updateRecipe",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the recipe",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RecipeRequestSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Recipe updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RecipeResponseSchema"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized. Token missing or invalid.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized. Token missing or invalid."
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 401
                                        },
                                        "error_type": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Ingredient not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Ingredient not found."
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "error_type": {
                                            "type": "string",
                                            "example": "Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Request. Validation errors.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unprocessable Request."
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 422
                                        },
                                        "error_type": {
                                            "type": "string",
                                            "example": "Unprocessable Content"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Recipes"
                ],
                "summary": "Delete a specific recipe",
                "operationId": "deleteRecipe",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the recipe",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Recipe deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Recipe deleted"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized. Token missing or invalid.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized. Token missing or invalid."
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 401
                                        },
                                        "error_type": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Recipe not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Recipe not found."
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "error_type": {
                                            "type": "string",
                                            "example": "Not Found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "IngredientRequestSchema": {
                "title": "Ingredient Request Schema",
                "description": "Schema for creating an ingredient",
                "required": [
                    "name",
                    "quantity"
                ],
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "quantity": {
                        "type": "number",
                        "format": "float"
                    }
                },
                "type": "object"
            },
            "IngredientResponseSchema": {
                "title": "Ingredient Response Schema",
                "description": "Schema for an ingredient response",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "quantity": {
                        "type": "integer"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "id": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "example": {
                    "name": "Tomato",
                    "quantity": 20,
                    "updated_at": "2023-08-28T00:54:54.000000Z",
                    "created_at": "2023-08-28T00:54:54.000000Z",
                    "id": 1
                }
            },
            "LoginRequestSchema": {
                "title": "Login Request",
                "required": [
                    "email",
                    "password"
                ],
                "properties": {
                    "email": {
                        "type": "string",
                        "format": "email"
                    },
                    "password": {
                        "type": "string",
                        "format": "password"
                    }
                },
                "type": "object"
            },
            "LoginResponseSchema": {
                "title": "Login Response",
                "properties": {
                    "user": {
                        "properties": {
                            "id": {
                                "type": "integer",
                                "example": "1"
                            },
                            "name": {
                                "type": "string",
                                "example": "Alex Ochoa"
                            },
                            "email": {
                                "type": "string",
                                "example": "alexx1708@gmail.com"
                            },
                            "email_verified_at": {
                                "type": "string",
                                "format": "date-time",
                                "example": null
                            },
                            "created_at": {
                                "type": "string",
                                "format": "date-time",
                                "example": "2023-08-25T04:42:17.000000Z"
                            },
                            "updated_at": {
                                "type": "string",
                                "format": "date-time",
                                "example": "2023-08-25T04:42:17.000000Z"
                            }
                        },
                        "type": "object"
                    },
                    "token": {
                        "type": "string",
                        "example": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOi8vZm9vZC1zZWxsZXItYXBpLnRlc3QvYXBpL3YxL2F1dGgvbG9naW4iLCJpYXQiOjE2OTMxMTQ1MTIsImV4cCI6MTY5MzExODExMiwibmJmIjoxNjkzMTE0NTEyLCJqdGkiOiJIcVhpYnNIaWJUTFl3djRaIiwic3ViIjoiMSIsInBydiI6IjIzYmQ1Yzg5NDlmNjAwYWRiMzllNzAxYzQwMDg3MmRiN2E1OTc2ZjcifQ.971zQ_OiJxaOTVg7xsnFSJheKtQugZkWjZ4GFw8rVzo"
                    }
                },
                "type": "object"
            },
            "RecipeRequestSchema": {
                "title": "Recipe Request",
                "required": [
                    "name",
                    "type",
                    "ingredients",
                    "price",
                    "description"
                ],
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "ingredients": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "id": {
                                    "type": "integer"
                                },
                                "quantity": {
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "price": {
                        "type": "number"
                    },
                    "description": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "RecipeResponseSchema": {
                "title": "Recipe Response",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "price": {
                        "type": "string",
                        "example": "120.00"
                    },
                    "description": {
                        "type": "string"
                    },
                    "ingredients": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "id": {
                                    "type": "integer"
                                },
                                "name": {
                                    "type": "string"
                                },
                                "quantity": {
                                    "type": "string",
                                    "example": "1.00"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "type": "object"
            },
            "RegisterRequestSchema": {
                "title": "Register Request",
                "required": [
                    "name",
                    "email",
                    "password",
                    "password_confirmation"
                ],
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string",
                        "format": "email"
                    },
                    "password": {
                        "type": "string",
                        "format": "password",
                        "minLength": 6
                    },
                    "password_confirmation": {
                        "type": "string",
                        "format": "password",
                        "minLength": 6
                    }
                },
                "type": "object"
            },
            "RegistrationResponseSchema": {
                "title": "Registration Response",
                "properties": {
                    "user": {
                        "properties": {
                            "id": {
                                "type": "integer",
                                "example": "1"
                            },
                            "name": {
                                "type": "string",
                                "example": "Alex Ochoa"
                            },
                            "email": {
                                "type": "string",
                                "example": "alexx1708@gmail.com"
                            },
                            "created_at": {
                                "type": "string",
                                "format": "date-time",
                                "example": "2023-08-25T04:42:17.000000Z"
                            },
                            "updated_at": {
                                "type": "string",
                                "format": "date-time",
                                "example": "2023-08-25T04:42:17.000000Z"
                            }
                        },
                        "type": "object"
                    },
                    "token": {
                        "type": "string",
                        "example": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOi8vZm9vZC1zZWxsZXItYXBpLnRlc3QvYXBpL3YxL2F1dGgvcmVnaXN0ZXIiLCJpYXQiOjE2OTMxMTQ1MTIsImV4cCI6MTY5MzExODExMiwibmJmIjoxNjkzMTE0NTEyLCJqdGkiOiJIcVhpYnNIaWJUTFl3djRaIiwic3ViIjoiMSIsInBydiI6IjIzYmQ1Yzg5NDlmNjAwYWRiMzllNzAxYzQwMDg3MmRiN2E1OTc2ZjcifQ.971zQ_OiJxaOTVg7xsnFSJheKtQugZkWjZ4GFw8rVzo"
                    }
                },
                "type": "object"
            },
            "UserProfileResponseSchema": {
                "title": "User Profile Response",
                "properties": {
                    "user": {
                        "properties": {
                            "id": {
                                "type": "integer",
                                "example": "1"
                            },
                            "name": {
                                "type": "string",
                                "example": "Alex Ochoa"
                            },
                            "email": {
                                "type": "string",
                                "example": "alexx1708@gmail.com"
                            },
                            "email_verified_at": {
                                "type": "string",
                                "format": "date-time",
                                "example": null
                            },
                            "created_at": {
                                "type": "string",
                                "format": "date-time",
                                "example": "2023-08-25T04:42:17.000000Z"
                            },
                            "updated_at": {
                                "type": "string",
                                "format": "date-time",
                                "example": "2023-08-25T04:42:17.000000Z"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object",
                "example": {
                    "user": {
                        "id": 1,
                        "name": "Alex Ochoa",
                        "email": "alexx1708@gmail.com",
                        "email_verified_at": null,
                        "created_at": "2023-08-25T04:42:17.000000Z",
                        "updated_at": "2023-08-25T04:42:17.000000Z"
                    }
                }
            },
            "UserSchema": {
                "title": "User",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "updated_at": {
                        "type": "string"
                    },
                    "id": {
                        "type": "integer"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    }
}